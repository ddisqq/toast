# Use pre-built docker containers to run our unit tests on different python versions.

name:  Run Test Suite

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - toast3

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: "3.7"
            ostype: "linux"
            comp_cc:  gcc
            comp_cxx:  g++
            flags_cxx:  "-O3 -fPIC -std=c++11"
          # - os: ubuntu-latest
          #   python: "3.8"
          # - os: ubuntu-latest
          #   python: "3.9"
          # - os: ubuntu-latest
          #   python: "3.10"
          - os: macos-latest
            python: "3.7"
            ostype: "macos"
            comp_cc:  clang
            comp_cxx:  clang++
            flags_cxx:  "-O3 -fPIC -std=c++11 -stdlib=libc++"
          # - os: macos-latest
          #   python: "3.8"
          # - os: macos-latest
          #   python: "3.9"
          # - os: macos-latest
          #   python: "3.10"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies (Linux)
        run: |
          apt-get update
          apt-get install -y curl build-essential libopenblas-dev libfftw3-dev libsuitesparse-dev libmpich-dev
        if: ${{ matrix.ostype }} == "linux"

      - name: Install Dependencies (MacOS)
        run: |
          brew update
          brew install curl fftw3 suitesparse mpich
        if: ${{ matrix.ostype }} == "macos"

      - name: Install libaatm
        run: |
          curl -SL "https://github.com/hpc4cmb/libaatm/archive/1.0.9.tar.gz" | tar xzf -
          cd libaatm-1.0.9
          mkdir build
          cd build
          cmake \
            -DCMAKE_C_COMPILER="${{ matrix.comp_cc }}" \
            -DCMAKE_CXX_COMPILER="${{ matrix.comp_cxx }}" \
            -DCMAKE_C_FLAGS="-O3 -fPIC" \
            -DCMAKE_CXX_FLAGS="${{ matrix.flags_cxx }}" \
            -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX="/usr" \
            ..
          make -j 2 install
          cd ..
          cd ..

      - name: Install Python Dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install mpi4py

      - name: Install TOAST
        run: |
          export TOAST_BUILD_CMAKE_C_COMPILER="${{ matrix.comp_cc }}"
          export TOAST_BUILD_CMAKE_CXX_COMPILER="${{ matrix.comp_cxx }}"
          python3 -m pip install .

      - name: Run Serial Tests
        run: |
          export MPI_DISABLE=1
          export OMP_NUM_THREADS=2
          python3 -c 'import toast.tests; toast.tests.run()'

      - name: Run MPI Tests
        run: |
          unset MPI_DISABLE
          export OMP_NUM_THREADS=2
          mpirun -np 2 python3 -c 'import toast.tests; toast.tests.run()'






jobs:
  py37:
    name: Python 3.7
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull Dependency Image
        run: docker pull hpc4cmb/toast-deps-py37:latest
      - name: Compile
        run: docker run -v "$(pwd)":/home/toast --name="test_py37" hpc4cmb/toast-deps-py37:latest /home/toast/platforms/install_test_runner.sh && docker commit -m "test runner" test_py37 test_runner:py37
      # - name: Test Documentation Build
      #   run: docker run -v "$(pwd)":/home/toast test_runner:py37 /home/toast/docs/build_docs.sh
      - name: Run Serial Tests
        run: docker run -e MPI_DISABLE=1 test_runner:py37 python -c 'import toast.tests; toast.tests.run()'
      - name: Run MPI Tests
        run: docker run test_runner:py37 mpirun -np 2 python -c 'import toast.tests; toast.tests.run()'
  py38:
    name: Python 3.8
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull Dependency Image
        run: docker pull hpc4cmb/toast-deps-py38:latest
      - name: Compile
        run: docker run -v "$(pwd)":/home/toast --name="test_py38" hpc4cmb/toast-deps-py38:latest /home/toast/platforms/install_test_runner.sh && docker commit -m "test runner" test_py38 test_runner:py38
      # - name: Test Documentation Build
      #   run: docker run -v "$(pwd)":/home/toast test_runner:py38 /home/toast/docs/build_docs.sh
      - name: Run Serial Tests
        run: docker run -e MPI_DISABLE=1 test_runner:py38 python -c 'import toast.tests; toast.tests.run()'
      - name: Run MPI Tests
        run: docker run test_runner:py38 mpirun -np 2 python -c 'import toast.tests; toast.tests.run()'
  py39:
    name: Python 3.9
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull Dependency Image
        run: docker pull hpc4cmb/toast-deps-py39:latest
      - name: Compile
        run: docker run -v "$(pwd)":/home/toast --name="test_py39" hpc4cmb/toast-deps-py39:latest /home/toast/platforms/install_test_runner.sh && docker commit -m "test runner" test_py39 test_runner:py39
      # - name: Test Documentation Build
      #   run: docker run -v "$(pwd)":/home/toast test_runner:py39 /home/toast/docs/build_docs.sh
      - name: Run Serial Tests
        run: docker run -e MPI_DISABLE=1 test_runner:py39 python -c 'import toast.tests; toast.tests.run()'
      - name: Run MPI Tests
        run: docker run test_runner:py39 mpirun -np 2 python -c 'import toast.tests; toast.tests.run()'
